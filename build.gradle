buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowJar_version"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'

group 'com.transfers.internal'
version '1.0.0'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

jacoco {
    toolVersion = "$jacoco_version"
    reportsDir = file("$buildDir/reports/jacoco")
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Ktor
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"

    // Validation
    compile "org.hibernate.validator:hibernate-validator:$hibernate_version"
    compile "org.glassfish:javax.el:$glassfish_el_version"

    // Logs
    compile "ch.qos.logback:logback-classic:$logback_version"

    // Koin - Dependency Injection
    compile "org.koin:koin-ktor:$koin_version"

    // Test
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    testCompile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testCompile "org.mockito:mockito-junit-jupiter:$mockito_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "com.google.code.gson:gson:$gson_version"
    testCompile "org.koin:koin-test:$koin_version"
}

test {
    // To enable JUnit5 in gradle
    useJUnitPlatform()

    finalizedBy("jacocoTestReport")
    doLast {
        println("View code coverage at:")
        println("file://$buildDir/reports/jacoco/test/html/index.html")
        println("View test report at:")
        println("file://$buildDir/reports/tests/test/index.html")
    }
}

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}